// Roll No.: 20172066
// Binary Search

class Program {

	int arr[10];
	nt L[10],R[10];
	void merge(int arr[], int l, int m, int r)
	{
	    int i,j,k;

	    int n1=m-l+1;
	    int n2=r-m;

	    for i = 0 , i <n1 {
	    	L[i]=arr[l+i];
	    }
	    for j=0 ,j<n2 {
	    	R[j]=arr[m+j+1];
	    }

	    j=0;
	    k=l;
	    
	    for i=0, i<n1 && j<n2{
	    	if (L[i] <= R[j]) 
        	{ 
	            arr[k] = L[i]; 
	            i=i+1; 
        	}
	        else
	        {
	            arr[k] = R[j]; 
	            j=j+1; 
	        } 
        	k=k+1; 
	    }

		for  ,i < n1{ 
		    arr[k] = L[i]; 
		    k=k+1;
		    i=i+1;
		}
		for ,j < n2 {
		    arr[k] = R[j]; 
		    j=j+1; 
		    k=k+1; 
		}
	}

	void mergeSort(int arr[], int l, int r) 
	{ 
		if (l < r) 
	    {
	        int m = l+(r-l)/2; 
	        mergeSort(arr, l, m); 
	        mergeSort(arr, m+1, r); 
	  		merge(arr, l, m, r); 
	    } 
	} 

	int main () {	
		arr [0] = 1234;
		arr [1] = 142;
		arr [2] = 458;
		arr [3] = 85898;
		arr [4] = 58;
		arr [5] = 4547;
		arr [6] = 2125;
		arr [7] = 14553;
		arr [8] = 5646;
		arr [9] = 543;
	
		mergeSort(arr, 0, n-1);
		int i;
		callout("printf","sorted elements are :");
		for i = 0 , i < n {
			callout("printf","%d ",arr[i]);
			i+=1;
		}

		return 0 ;
	}

}
